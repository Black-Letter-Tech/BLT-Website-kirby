# ----------------------------------------------------------------------
# | Compression                                                        |
# ----------------------------------------------------------------------

# https://nginx.org/en/docs/http/ngx_http_gzip_module.html

# Enable gzip compression.
# Default: off
gzip on;

# Compression level (1-9).
# 5 is a perfect compromise between size and CPU usage, offering about
# 75% reduction for most ASCII files (almost identical to level 9).
# Default: 1
gzip_comp_level 5;

# Don't compress anything that's already small and unlikely to shrink much
# if at all (the default is 20 bytes, which is bad as that usually leads to
# larger files after gzipping).
# Default: 20
gzip_min_length 256;

# Compress data even for clients that are connecting to us via proxies,
# identified by the "Via" header (required for CloudFront).
# Default: off
gzip_proxied any;

# Tell proxies to cache both the gzipped and regular version of a resource
# whenever the client's Accept-Encoding capabilities header varies;
# Avoids the issue where a non-gzip capable client (which is extremely rare
# today) would display gibberish if their proxy gave them the gzipped version.
# Default: off
gzip_vary on;

# Compress all output labeled with one of the following MIME-types.
# text/html is always compressed by gzip module.
# Default: text/html
gzip_types
  application/atom+xml
  application/javascript
  application/json
  application/ld+json
  application/manifest+json
  application/rss+xml
  application/geo+json
  application/vnd.ms-fontobject
  application/x-web-app-manifest+json
  application/xhtml+xml
  application/xml
  application/rdf+xml
  font/otf
  application/wasm
  image/bmp
  image/svg+xml
  text/cache-manifest
  text/css
  text/javascript
  text/plain
  text/markdown
  text/vcard
  text/calendar
  text/vnd.rim.location.xloc
  text/vtt
  text/x-component
  text/x-cross-domain-policy;

# This should be turned on if you are going to have pre-compressed copies (.gz) of
# static files available. If not it should be left off as it will cause extra I/O
# for the check. It is best if you enable this in a location{} block for
# a specific directory, or on an individual server{} level.
# gzip_static on;



## update the server below to http2 and ssl, and then use this first block to redirect all traffic to http2 ssl server
#server {
#    listen 80 default_server;
#    listen [::]:80 default_server;
#    server_name _;
#    return 301 https://$host$request_uri;
#}

# expires mapping for different mime types
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}


server {


    server_name $SERVER_NAME;
    if ($host != $SERVER_NAME) {
        rewrite ^/(.*) $scheme://$SERVER_NAME/$1 redirect;
    }  

    set $pw_protect $ENABLE_PW;
    
    listen 80;    
    expires $expires;
    set $auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;


    root /app/public;
    index index.php;

    client_max_body_size 100M;

    ## redirects from old site
    rewrite ^/assets/IFM-Tools.pdf$ /ifm-tools.pdf permanent;

    # issue with ip and the nginx proxy
    # docker internal network range of IPs are as listed below, unless docker changes
    real_ip_header X-Forwarded-For;
    set_real_ip_from 172.16.0.0/12;




    #md5 cache bust
    location ~ (.+)\.([0-9a-f]+)\.(js|css|png|jpg|jpeg|gif)$ {
        try_files $uri $1.$3;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        #root           html;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        include        fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME             $fastcgi_script_name;
        fastcgi_param       PATH_TRANSLATED         $document_root$fastcgi_path_info;
        # fastcgi_pass_request_headers on;
        # fastcgi_pass_header Authorization;
        # fastcgi_param HTTP_AUTHORIZATION $http_authorization;


        #fastcgi_param  SERVER_NAME        $host;
        if ($pw_protect != true) {
            set $auth_basic off; 
        }
        auth_basic $auth_basic;   
    }


    # removes trailing slashes (prevents SEO duplicate content issues)
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }


    # site links
    location ~ / {

        try_files $uri $uri/ /index.php$is_args$args;
    }

    ## Safety routes

    # Prevent clients from accessing hidden files (starting with a dot)
    location ~ (?:^|/)\. {
        deny all;
    }

    # Prevent clients from accessing to backup/config/source files
    location ~ (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
        deny all;
    }

}